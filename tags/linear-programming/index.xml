<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linear Programming on PINEAL.ME</title>
    <link>https://pineal.github.com/tags/linear-programming/</link>
    <description>Recent content in Linear Programming on PINEAL.ME</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Nov 2014 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://pineal.github.com/tags/linear-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linear Programming</title>
      <link>https://pineal.github.com/posts/linear_programming/</link>
      <pubDate>Wed, 26 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://pineal.github.com/posts/linear_programming/</guid>
      <description>&lt;p&gt;$$\matrix{A} \times \matrix{X} = \matrix{B}  $$&lt;/p&gt;

&lt;p&gt;Coeffienent matrix&lt;/p&gt;

&lt;p&gt;A =&amp;gt; n * n, x vector of unknowns, B right hand side&lt;/p&gt;

&lt;p&gt;Linear system of equations.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;$$A \times X ≥ B$$&lt;/p&gt;

&lt;p&gt;Objective function&lt;/p&gt;

&lt;p&gt;$$C^T \times X $$&lt;/p&gt;

&lt;p&gt;linear&lt;/p&gt;

&lt;p&gt;Goal : Minimize the objective function&lt;/p&gt;

&lt;p&gt;E.g.:
$$
\cases{x1 - x2 ≥ 0 \&lt;br /&gt;
x_1 ≥ 0 \&lt;br /&gt;
x_2 ≥ 0 \&lt;br /&gt;
x1 + x2 ≤ 4
}$$&lt;/p&gt;

&lt;p&gt;Maximize
$x1 + 2x_2$&lt;/p&gt;

&lt;p&gt;###Simplex method
Only look at the vertex&lt;/p&gt;

&lt;p&gt;Start of one vertex, go clockwise, find the max before the value going down&lt;/p&gt;

&lt;p&gt;###Weighted vertex cover problem&lt;/p&gt;

&lt;p&gt;for G = (V, E), S $\in$ V in a set such that each edge has at least one end in S $W_i ≥ 0$ for each i $\in$ V $$W(S) = \sum i \in S w_i$$&lt;/p&gt;

&lt;p&gt;Objective: Minimize W(S)&lt;/p&gt;

&lt;p&gt;Model this as an LP&lt;/p&gt;

&lt;p&gt;x_i is a decision valuable for each node i \in V&lt;/p&gt;

&lt;p&gt;$$
\cases{
x_1 - x_2 ≥ 0 \&lt;br /&gt;
x_1 ≥ 0 \&lt;br /&gt;
x_2 ≥ 0 \&lt;br /&gt;
x_1 + x_2 ≤ 4
}$$&lt;/p&gt;

&lt;p&gt;$$
\cases{
x_i = 0 &amp;amp; i \notin S \&lt;br /&gt;
x_i = 1 &amp;amp; i \in S
}
$$&lt;/p&gt;

&lt;p&gt;x_i + x_j ≥ 1 for each edge&lt;/p&gt;

&lt;p&gt;Minimize \sigma w_ix_i
Subject to
$x_i + x_j ≥ 1 for (i, j) \in E$
$x_i \in {0,1} for i \in V$  &amp;lt;= discreate&lt;/p&gt;

&lt;p&gt;Integer Programming&lt;/p&gt;

&lt;p&gt;Linear programming  (continues variables)
Integer Programming (discrete variables)
mixed integer programming&lt;/p&gt;

&lt;p&gt;Drop the requirement that x_i \in {0,1}
and solve the LP in poly time and find {x_i^*} between 0 and 1&lt;/p&gt;

&lt;p&gt;so that x_i^* + x_j^* ≥ 1 for each edge&lt;/p&gt;

&lt;p&gt;W_{LP} = \sigma w_ix_i^*&lt;/p&gt;

&lt;p&gt;S^* is the opt vertex cover set
W(S^*) = weight of the opt solution&lt;/p&gt;

&lt;p&gt;W(S^*) ≥ W_{LP}&lt;/p&gt;

&lt;p&gt;S is our approx. solution&lt;/p&gt;

&lt;p&gt;W(S) ≤ 2 * W&lt;em&gt;{LP}
W&lt;/em&gt;{LP} ≤ 2 * W(s^*)&lt;/p&gt;

&lt;p&gt;W(S) ≤ 2 * W(S^*)&lt;/p&gt;

&lt;p&gt;Solve the max. flow problem using LP. Variable are flow over edges.&lt;/p&gt;

&lt;p&gt;Maximize \sigma f{e}
subject to
0 ≤ f(e) ≤ c_e foe each edge e \in E
\sigma f(e) - \sigma f(e) = 0 for v \in V&lt;/p&gt;

&lt;p&gt;A = B
A - B ≥ 0
B - A ≥ 0&lt;/p&gt;

&lt;p&gt;Max flow with lower bounds on flow over the edges
objective function stays same
conservation of the flow stays same&lt;/p&gt;

&lt;p&gt;Cap constraint: l_e≤f(e)≤c_e for each edge e \in E&lt;/p&gt;

&lt;p&gt;###Multi commodity flow
f_i(e): flow of commodity i over edge e
\alpha_i: is the profit associated with one unit of flow for commodity i.&lt;/p&gt;

&lt;p&gt;We have m commodities&lt;/p&gt;

&lt;p&gt;Objective: maximize profit&lt;/p&gt;

&lt;p&gt;Maximize $\sigma&lt;em&gt;{l=i}^m \sigma&lt;/em&gt;{eoutofS} \alpha_i f_i(e)$&lt;/p&gt;

&lt;p&gt;subject to 0 ≤ \sigma_{i=1}^m f&lt;em&gt;i{e} ≤c&lt;/em&gt;{e} for each e \in E&lt;/p&gt;

&lt;p&gt;\sigma_{i=1}^m f&lt;em&gt;i{e} = \sigma&lt;/em&gt;{i=1}^m f_i{e} for each node v \in V and for each i = 1 to m&lt;/p&gt;

&lt;p&gt;###Shortest path using LP
Shortest distance from V to t is d(v) for each node V
For each node V
$$
d(t) ≤ d(y) + c&lt;em&gt;{yt} \&lt;br /&gt;
d(t) ≤ d(w) + c&lt;/em&gt;{wt} \&lt;br /&gt;
d(t) ≤ d(x) + c_{xt} \&lt;br /&gt;
$$&lt;/p&gt;

&lt;p&gt;d&lt;em&gt;{v} ≤ d&lt;/em&gt;{u} + w(u, v) for each edge (u, v) \in E
d(s) = 0&lt;/p&gt;

&lt;p&gt;Objective function:
    Minimize d(t)&lt;/p&gt;

&lt;p&gt;1:36&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>