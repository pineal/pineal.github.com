<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dynamic Programming on PINEAL.ME</title>
    <link>https://pineal.github.com/tags/dynamic-programming/</link>
    <description>Recent content in Dynamic Programming on PINEAL.ME</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Sep 2018 09:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://pineal.github.com/tags/dynamic-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dynamic Programming III</title>
      <link>https://pineal.github.com/posts/dynamic_programming_iii/</link>
      <pubDate>Sat, 08 Sep 2018 09:00:00 +0000</pubDate>
      
      <guid>https://pineal.github.com/posts/dynamic_programming_iii/</guid>
      <description>背包问题 0-1 背包问题 Question Given weights and values of n items, put these items in a knapsack of capacity W to get the maximum total value in the knapsack. In other words, given two integer arrays $values[0..n-1]$ and $weights[0..n-1]$ which represent values and weights associated with n items respectively. Also given an integer W which represents knapsack capacity, find out the maximum value subset of $values[0..n-1]$ such that sum of the weights of this subset is smaller than or equal to W.</description>
    </item>
    
    <item>
      <title>Dynamic Programming II</title>
      <link>https://pineal.github.com/posts/dynamic_programming_ii/</link>
      <pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pineal.github.com/posts/dynamic_programming_ii/</guid>
      <description>Coin game winner A and B are playing a game. At the beginning there are n coins. Given two more numbers x and y. In each move a player can pick x or y or 1 coins. A always starts the game. The player who picks the last coin wins the game. For a given value of n, find whether A will win the game or not if both are playing optimally.</description>
    </item>
    
    <item>
      <title>Dynamic Programming I</title>
      <link>https://pineal.github.com/posts/dynamic_programming_i/</link>
      <pubDate>Wed, 04 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pineal.github.com/posts/dynamic_programming_i/</guid>
      <description>Max Product Of Cutting Rope Given a rope with positive integer-length n, how to cut the rope into m integer-length parts with length $p[0], p[1], &amp;hellip;,p[m-1]$, in order to get the maximal product of $p[0]p[1] &amp;hellip; p[m-1]$? m is determined by you and must be greater than 0 (at least one cut must be made). Return the max product you can have.
Example n = 12, the max product is 3 * 3 * 3 * 3 = 81 (cut the rope into 4 pieces with length of each is 3).</description>
    </item>
    
  </channel>
</rss>